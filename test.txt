

stmt -> if (expr) stmt else stmt

call -> id (optparams)
optparams -> params | e
params -> params , param | param

right -> letter = right | letter
letter -> a|b|c...|z


expr -> expr + term
    | expr - term
    | term
term -> term * factor
    | term / factor
    | factor
factor -> digit | (expr)

stmt -> id = expression;
    | if (expr) stmt
    | if (expr) stmt else stmt
    | while (expr) stmt
    | do stmt while (expr)
    | {stmts}

stmts -> stmts stmt
    | e

stmt -> expr
    | for (optexpr; optexpr; optexpr) stmt
    | other
optexpr -> e
    | expr





//solve left recursion
A -> Aa | b

A -> bR
R -> aR | e


//275
stmt -> matched_stmt
    | open_stmt

matched_stmt -> if expr them matched_stmt else matched_stmt
    | other

open_stmt -> if expr then stmt
    | if expr then matched_stmt else open_stmt
